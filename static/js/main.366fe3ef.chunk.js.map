{"version":3,"sources":["components/AccordionSection.module.css","App.module.css","components/Accordion.module.css","components/useAccordionState.js","components/Accordion.js","components/useId.js","components/AccordionSection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Label","Panel","Wrapper","Accordion","useAccordionState","intialState","_useState","useState","_useState2","Object","slicedToArray","expanded","setExpanded","onToggle","id","assign","defineProperty","AccordionContext","createContext","focusRef","selected","expandedAll","undefined","onNavigation","_ref","children","controlledExpanded","controlledOnToggle","rest","objectWithoutProperties","isControlledRef","useRef","uncontrolled","current","nanoid","useId","setSelected","context","useMemo","key","React","Children","count","react_default","a","createElement","className","styles","Provider","value","map","child","index","props","cloneElement","objectSpread","defaultProps","AccordionSection","title","_useAccordionContext","useContext","sectionId","concat","labelId","labelRef","useEffect","focus","Fragment","role","aria-expanded","aria-controls","tabIndex","onClick","onKeyDown","e","preventDefault","onFocus","onBlur","ref","aria-hidden","aria-labelledby","hidden","App","accordionProps","test","setTest","Accordion_Accordion","AccordionSection_AccordionSection","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.366fe3ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"AccordionSection_Label__1xTdK\",\"Panel\":\"AccordionSection_Panel__29VEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__2FdRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accordion\":\"Accordion_Accordion__pVSkl\"};","import { useState } from \"react\";\n\nexport const useAccordionState = intialState => {\n  const [expanded, setExpanded] = useState(intialState);\n  const onToggle = id => {\n    setExpanded(\n      Object.assign([], expanded, {\n        [id]: !expanded[id]\n      })\n    );\n  };\n  return { expanded, onToggle };\n};\n","import React, {\n  useRef,\n  createContext,\n  useContext,\n  useState,\n  useMemo\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Accordion.module.css\";\nimport { useId } from \"./useId\";\nimport { useAccordionState } from \"./useAccordionState\";\n\nconst AccordionContext = createContext({\n  focusRef: {},\n  selected: [null],\n  expandedAll: [],\n  onToggle: undefined,\n  onNavigation: () => undefined,\n  id: null\n});\nexport const useAccordionContext = () => useContext(AccordionContext);\n\n/**\n * Accordion according to Accordion Design Pattern in WAI-ARIA Authoring Practices 1.1\n * see https://www.w3.org/TR/wai-aria-practices/examples/accordion/accordion.html\n *\n * Keyboard Support:\n *\n```\nSpace or Enter\n  👍 When focus is on the accordion header of a collapsed section, expands the section.\nTab\n  👍 Moves focus to the next focusable element.\n  👍 All focusable elements in the accordion are included in the page Tab sequence.\nShift + Tab\n  👍 Moves focus to the previous focusable element.\n  👍 All focusable elements in the accordion are included in the page Tab sequence.\nDown Arrow\n  👍 When focus is on an accordion header, moves focus to the next accordion header.\n  👍 When focus is on last accordion header, moves focus to first accordion header.\nUp Arrow\n  👍 When focus is on an accordion header, moves focus to the previous accordion header.\n  👍 When focus is on first accordion header, moves focus to last accordion header.\nHome\n  👍 When focus is on an accordion header, moves focus to the first accordion header.\nEnd\n  👍 When focus is on an accordion header, moves focus to the last accordion header.\n```\n */\nexport const Accordion = ({\n  children,\n  expanded: controlledExpanded,\n  onToggle: controlledOnToggle,\n  ...rest\n}) => {\n  const isControlledRef = useRef(controlledExpanded != null);\n  if (process.env.NODE_ENV === \"development\") {\n    if (isControlledRef.current && controlledExpanded == null) {\n      console.warn(\"Accordion is changing from controlled to uncontrolled.\");\n    }\n    if (!isControlledRef.current && controlledExpanded != null) {\n      console.warn(\"Accordion is changing from  uncontrolled to controlled.\");\n    }\n  }\n\n  const uncontrolled = useAccordionState([]);\n  const expanded = isControlledRef.current\n    ? controlledExpanded\n    : uncontrolled.expanded;\n  const onToggle = isControlledRef.current\n    ? controlledOnToggle\n    : uncontrolled.onToggle;\n\n  const id = useId();\n  const focusRef = useRef(null);\n  const [selected, setSelected] = useState([null]);\n\n  const context = useMemo(\n    () => ({\n      focusRef,\n      selected,\n      expandedAll: expanded,\n      onToggle,\n      id,\n      onNavigation: key => {\n        switch (key) {\n          case \"ArrowDown\":\n            if (focusRef.current >= React.Children.count(children) - 1) {\n              setSelected([0]);\n            } else {\n              setSelected([focusRef.current + 1]);\n            }\n            break;\n          case \"ArrowUp\":\n            if (focusRef.current <= 0) {\n              setSelected([React.Children.count(children) - 1]);\n            } else {\n              setSelected([focusRef.current - 1]);\n            }\n            break;\n          case \"Home\":\n            setSelected([0]);\n            break;\n          case \"End\":\n            setSelected([React.Children.count(children) - 1]);\n            break;\n          default:\n        }\n      }\n    }),\n    [selected, setSelected, expanded, onToggle, children, id]\n  );\n\n  return (\n    <div className={styles.Accordion} {...rest}>\n      <AccordionContext.Provider value={context}>\n        {React.Children.map(children, (child, index) => {\n          if (process.env.NODE_ENV === \"development\") {\n            if (child === null) return;\n            if (typeof child !== \"object\") {\n              console.warn(\n                `Only AccordionSection and null are allowed as a child of Accordion. Found primitive value: ${child}`\n              );\n              return;\n            }\n            if (typeof child.type === \"string\") {\n              console.warn(\n                `Only AccordionSection and null are allowed as a child of Accordion. Found ${\n                  child.type\n                }`\n              );\n              return;\n            }\n            if (child.props.index !== undefined) {\n              console.warn(\n                `Don't provide index param in AccordionSection it is used for internal purposes`\n              );\n            }\n          } else {\n            if (!child || !child.props) return child;\n          }\n          return React.cloneElement(child, {\n            ...child.props,\n            index\n          });\n        })}\n      </AccordionContext.Provider>\n    </div>\n  );\n};\n\nAccordion.propTypes = {\n  expanded: PropTypes.arrayOf(PropTypes.bool),\n  onToggle: PropTypes.func\n};\n\nAccordion.defaultProps = {\n  expanded: null\n};\n","import nanoid from \"nanoid\";\nimport { useState } from \"react\";\n\nexport const useId = () => {\n  const [id] = useState(() => nanoid(5));\n  return id;\n};\n","import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./AccordionSection.module.css\";\nimport { useAccordionContext } from \"./Accordion\";\n\nexport const AccordionSection = ({ children, title, index }) => {\n  const {\n    focusRef,\n    selected,\n    expandedAll,\n    onToggle,\n    onNavigation,\n    id\n  } = useAccordionContext();\n  const sectionId = `section-${id}-${index}`;\n  const labelId = `label-${id}-${index}`;\n  const expanded = expandedAll[index];\n  const labelRef = useRef();\n  useEffect(() => {\n    if (index === selected[0] && labelRef.current) {\n      labelRef.current.focus();\n    }\n  }, [index, selected]);\n\n  return (\n    <>\n      <div\n        role=\"button\"\n        aria-expanded={expanded}\n        aria-controls={sectionId}\n        id={labelId}\n        tabIndex={0}\n        className={styles.Label}\n        onClick={() => onToggle && onToggle(index)}\n        onKeyDown={e => {\n          switch (e.key) {\n            case \" \":\n            case \"Enter\":\n              e.preventDefault();\n              onToggle && onToggle(index);\n              break;\n            case \"ArrowDown\":\n              e.preventDefault();\n              onNavigation(\"ArrowDown\");\n              break;\n            case \"ArrowUp\":\n              e.preventDefault();\n              onNavigation(\"ArrowUp\");\n              break;\n            case \"Home\":\n              e.preventDefault();\n              onNavigation(\"Home\");\n              break;\n            case \"End\":\n              e.preventDefault();\n              onNavigation(\"End\");\n              break;\n            default:\n          }\n        }}\n        onFocus={() => {\n          focusRef.current = index;\n        }}\n        onBlur={() => {\n          focusRef.current = null;\n        }}\n        ref={labelRef}\n      >\n        {title}\n        <span aria-hidden={true}>{expanded ? \"▲\" : \"▼\"}</span>\n      </div>\n      <div\n        role=\"region\"\n        aria-labelledby={labelId}\n        id={sectionId}\n        hidden={!expanded}\n        className={styles.Panel}\n      >\n        {expanded && children}\n      </div>\n    </>\n  );\n};\n\nAccordionSection.propTypes = {\n  index: PropTypes.number,\n  title: PropTypes.string.isRequired\n};\n","import React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\n\nimport { Accordion, AccordionSection, useAccordionState } from \"./components\";\n\nfunction App() {\n  const accordionProps = useAccordionState([false, true]);\n  const [test, setTest] = useState(true);\n  const toggleTest = () => {\n    setTest(!test);\n  };\n\n  return (\n    <div className={styles.Wrapper}>\n      <Accordion {...accordionProps}>\n        <AccordionSection title=\"section 1\">\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. In varius\n            lobortis iaculis. Donec ornare tellus vel quam convallis, quis\n            tristique libero blandit. Morbi quis lacinia urna. Curabitur laoreet\n            in tortor ac faucibus. Duis laoreet eros nulla, eget cursus elit\n            mollis id. Fusce sagittis dui vitae malesuada imperdiet. In non\n            facilisis dui. Duis sit amet nulla eu odio venenatis posuere. Nam\n            congue luctus risus nec laoreet. Quisque rutrum porttitor sapien,\n            nec iaculis eros pharetra volutpat. Maecenas fringilla ultrices\n            massa vitae interdum.\n          </p>\n          <Accordion>\n            <AccordionSection title=\"section 1\">\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. In\n                varius lobortis iaculis. Donec ornare tellus vel quam convallis,\n                quis tristique libero blandit. Morbi quis lacinia urna.\n                Curabitur laoreet in tortor ac faucibus. Duis laoreet eros\n                nulla, eget cursus elit mollis id. Fusce sagittis dui vitae\n                malesuada imperdiet. In non facilisis dui. Duis sit amet nulla\n                eu odio venenatis posuere. Nam congue luctus risus nec laoreet.\n                Quisque rutrum porttitor sapien, nec iaculis eros pharetra\n                volutpat. Maecenas fringilla ultrices massa vitae interdum.\n              </p>\n            </AccordionSection>\n          </Accordion>\n        </AccordionSection>\n        <AccordionSection title=\"section 2\">\n          <p>\n            <a href=\"/\">test link</a>\n            Suspendisse lobortis diam quis magna faucibus, in volutpat eros\n            facilisis. Aliquam ac mattis tellus, vitae tincidunt purus. Sed\n            lectus justo, maximus eget egestas eu, congue et enim. Maecenas\n            ullamcorper sollicitudin turpis, condimentum interdum nisl. Proin\n            leo dolor, varius eu sagittis eu, scelerisque nec dolor. Sed velit\n            diam, consectetur vel placerat vel, egestas nec tellus. Ut convallis\n            accumsan ipsum id consectetur. Morbi lorem purus, condimentum et\n            tellus non, volutpat ultricies risus. Nam pellentesque risus eu odio\n            bibendum, ut vehicula arcu convallis. Quisque interdum ligula ac\n            vulputate ornare. Praesent condimentum ligula sapien, id placerat\n            tellus sollicitudin sit amet. Pellentesque et urna sed sem porttitor\n            maximus. Pellentesque ullamcorper ipsum id turpis eleifend,\n            dignissim tincidunt dolor lobortis. Maecenas id elit et est vehicula\n            imperdiet. In non diam ultrices ex sagittis dapibus nec rutrum eros.\n            Nunc id egestas lorem.\n          </p>\n        </AccordionSection>\n        {test && (\n          <AccordionSection title=\"section 3\">\n            <p>\n              <a href=\"/\">test link</a>\n              Suspendisse lobortis diam quis magna faucibus, in volutpat eros\n              facilisis. Aliquam ac mattis tellus, vitae tincidunt purus. Sed\n              lectus justo, maximus eget egestas eu, congue et enim. Maecenas\n              ullamcorper sollicitudin turpis, condimentum interdum nisl. Proin\n              leo dolor, varius eu sagittis eu, scelerisque nec dolor. Sed velit\n              diam, consectetur vel placerat vel, egestas nec tellus. Ut\n              convallis accumsan ipsum id consectetur. Morbi lorem purus,\n              condimentum et tellus non, volutpat ultricies risus. Nam\n              pellentesque risus eu odio bibendum, ut vehicula arcu convallis.\n              Quisque interdum ligula ac vulputate ornare. Praesent condimentum\n              ligula sapien, id placerat tellus sollicitudin sit amet.\n              Pellentesque et urna sed sem porttitor maximus. Pellentesque\n              ullamcorper ipsum id turpis eleifend, dignissim tincidunt dolor\n              lobortis. Maecenas id elit et est vehicula imperdiet. In non diam\n              ultrices ex sagittis dapibus nec rutrum eros. Nunc id egestas\n              lorem.\n            </p>\n          </AccordionSection>\n        )}\n      </Accordion>\n      <br />\n      <br />\n      <br />\n      <button onClick={toggleTest}>toggle</button>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./modern-normalize.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}